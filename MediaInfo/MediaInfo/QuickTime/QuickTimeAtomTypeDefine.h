//
//  QuikTimeAtomTypeDefine.h
//  MP4File
//
//  Created by mysong on 2017/1/17.
//  Copyright © 2017年 mysong. All rights reserved.
//

#include <stdint.h>
#pragma once

enum Mp4AtomType {
    ///ISO family codes (see below for additional QuickTime codes)
    Mp4AtomType_ainf = 'ainf', //(DECE) Asset information to identify, license and play
    Mp4AtomType_avcn = 'avcn', //(DECE) AVC NAL Unit Storage Box
    Mp4AtomType_bloc = 'bloc', //(DECE) Base location and purchase location for license acquisition
    Mp4AtomType_bpcc = 'bpcc', //(JP2) Bits per component
    Mp4AtomType_buff = 'buff', //(NALu Video) Buffering information
    Mp4AtomType_bxml = 'bxml', //(ISO) binary XML container
    Mp4AtomType_ccid = 'ccid', //(OMA DRM 2.1) OMA DRM Content ID
    Mp4AtomType_cdef = 'cdef', //(JP2) type and ordering of the components within the codestream
    //Mp4AtomType_clip = 'clip', //(ISO) Reserved
    Mp4AtomType_cmap = 'cmap', //(JP2) mapping between a palette and codestream components
    Mp4AtomType_co64 = 'co64', //(ISO) 64-bit chunk offset
    Mp4AtomType_coin = 'coin', //(DECE) Content Information Box
    Mp4AtomType_colr = 'colr', //(JP2) specifies the colourspace of the image
    //Mp4AtomType_crgn = 'crgn', //(ISO) Reserved
    Mp4AtomType_crhd = 'crhd', //(MP4V1) reserved for ClockReferenceStream header
    Mp4AtomType_cslg = 'cslg', //(ISO) composition to decode timeline mapping
    //Mp4AtomType_ctab = 'ctab', //(ISO) Reserved
    Mp4AtomType_ctts = 'ctts', //(ISO) (composition) time to sample
    Mp4AtomType_cvru = 'cvru', //(OMA DRM 2.1) OMA DRM Cover URI
    Mp4AtomType_dinf = 'dinf', //(ISO) data information box, container
    Mp4AtomType_dref = 'dref', //(ISO) data reference box, declares source(s) of media data in track
    Mp4AtomType_dsgd = 'dsgd', //(DVB) DVB Sample Group Description Box
    Mp4AtomType_dstg = 'dstg', //(DVB) DVB Sample to Group Box
    Mp4AtomType_edts = 'edts', //(ISO) edit list container
    Mp4AtomType_elst = 'elst', //(ISO) an edit list
    Mp4AtomType_emsg = 'emsg', //(DASH) event message
    Mp4AtomType_fdel = 'fdel', //(ISO) File delivery information (item info extension)
    Mp4AtomType_feci = 'feci', //(ISO) FEC Informatiom
    Mp4AtomType_fecr = 'fecr', //(ISO) FEC Reservoir
    Mp4AtomType_fiin = 'fiin', //(ISO) FD Item Information
    Mp4AtomType_fire = 'fire', //(ISO) File Reservoir
    Mp4AtomType_fpar = 'fpar', //(ISO) File Partition
    Mp4AtomType_free = 'free', //(ISO) free space
    Mp4AtomType_frma = 'frma', //(ISO) original format box
    Mp4AtomType_ftyp = 'ftyp', //(JP2, ISO) file type and compatibility
    Mp4AtomType_gitn = 'gitn', //(ISO) Group ID to name
    Mp4AtomType_grpi = 'grpi', //(OMA DRM 2.0) OMA DRM Group ID
    Mp4AtomType_hdlr = 'hdlr', //(ISO) handler, declares the media (handler) type
    Mp4AtomType_hmhd = 'hmhd', //(ISO) hint media header, overall information (hint track only)
    Mp4AtomType_hpix = 'hpix', //(HIPIX) Hipix Rich Picture (user-data or meta-data)
    Mp4AtomType_icnu = 'icnu', //(OMA DRM 2.0) OMA DRM Icon URI
    Mp4AtomType_ID32 = 'ID32', //(inline) ID3 version 2 container
    Mp4AtomType_idat = 'idat', //(ISO) Item data
    Mp4AtomType_ihdr = 'ihdr', //(JP2) Image Header
    Mp4AtomType_iinf = 'iinf', //(ISO) item information
    Mp4AtomType_iloc = 'iloc', //(ISO) item location
    //Mp4AtomType_imap = 'imap', //(ISO) Reserved
    Mp4AtomType_imif = 'imif', //(ISO) IPMP Information box
    Mp4AtomType_infe = 'infe', //(ISO) Item information entry
    Mp4AtomType_infu = 'infu', //(OMA DRM 2.0) OMA DRM Info URL
    Mp4AtomType_iods = 'iods', //(MP4V1) Object Descriptor container box
    Mp4AtomType_iphd = 'iphd', //(MP4V1) reserved for IPMP Stream header
    Mp4AtomType_ipmc = 'ipmc', //(ISO) IPMP Control Box
    Mp4AtomType_ipro = 'ipro', //(ISO) item protection
    Mp4AtomType_iref = 'iref', //(ISO) Item reference
    Mp4AtomType_jP__ = 'jP  ', //(JP2) JPEG 2000 Signature
    Mp4AtomType_jp2c = 'jp2c', //(JP2) JPEG 2000 contiguous codestream
    Mp4AtomType_jp2h = 'jp2h', //(JP2) Header
    Mp4AtomType_jp2i = 'jp2i', //(JP2) intellectual property information
    //Mp4AtomType_kmat = 'kmat', //(ISO) Reserved
    Mp4AtomType_leva = 'leva', //(ISO) Leval assignment
    //Mp4AtomType_load = 'load', //(ISO) Reserved
    Mp4AtomType_lrcu = 'lrcu', //(OMA DRM 2.1) OMA DRM Lyrics URI
    Mp4AtomType_m7hd = 'm7hd', //(MP4V1) reserved for MPEG7Stream header
    //Mp4AtomType_matt = 'matt', //(ISO) Reserved
    Mp4AtomType_mdat = 'mdat', //(ISO) media data container
    Mp4AtomType_mdhd = 'mdhd', //(ISO) media header, overall information about the media
    Mp4AtomType_mdia = 'mdia', //(ISO) container for the media information in a track
    Mp4AtomType_mdri = 'mdri', //(OMA DRM 2.0) Mutable DRM information
    Mp4AtomType_meco = 'meco', //(ISO) additional metadata container
    Mp4AtomType_mehd = 'mehd', //(ISO) movie extends header box
    Mp4AtomType_mere = 'mere', //(ISO) metabox relation
    Mp4AtomType_meta = 'meta', //(ISO) Metadata container
    Mp4AtomType_mfhd = 'mfhd', //(ISO) movie fragment header
    Mp4AtomType_mfra = 'mfra', //(ISO) Movie fragment random access
    Mp4AtomType_mfro = 'mfro', //(ISO) Movie fragment random access offset
    Mp4AtomType_minf = 'minf', //(ISO) media information container
    Mp4AtomType_mjhd = 'mjhd', //(MP4V1) reserved for MPEG-J Stream header
    Mp4AtomType_moof = 'moof', //(ISO) movie fragment
    Mp4AtomType_moov = 'moov', //(ISO) container for all the meta-data
    Mp4AtomType_mvcg = 'mvcg', //(NALu Video) Multiview group
    Mp4AtomType_mvci = 'mvci', //(NALu Video) Multiview Information
    Mp4AtomType_mvex = 'mvex', //(ISO) movie extends box
    Mp4AtomType_mvhd = 'mvhd', //(ISO) movie header, overall declarations
    Mp4AtomType_mvra = 'mvra', //(NALu Video) Multiview Relation Attribute
    Mp4AtomType_nmhd = 'nmhd', //(ISO) Null media header, overall information (some tracks only)
    Mp4AtomType_ochd = 'ochd', //(MP4V1) reserved for ObjectContentInfoStream header
    Mp4AtomType_odaf = 'odaf', //(OMA DRM 2.0) OMA DRM Access Unit Format
    Mp4AtomType_odda = 'odda', //(OMA DRM 2.0) OMA DRM Content Object
    Mp4AtomType_odhd = 'odhd', //(MP4V1) reserved for ObjectDescriptorStream header
    Mp4AtomType_odhe = 'odhe', //(OMA DRM 2.0) OMA DRM Discrete Media Headers
    Mp4AtomType_odrb = 'odrb', //(OMA DRM 2.0) OMA DRM Rights Object
    Mp4AtomType_odrm = 'odrm', //(OMA DRM 2.0) OMA DRM Container
    Mp4AtomType_odtt = 'odtt', //(OMA DRM 2.0) OMA DRM Transaction Tracking
    Mp4AtomType_ohdr = 'ohdr', //(OMA DRM 2.0) OMA DRM Common headers
    Mp4AtomType_padb = 'padb', //(ISO) sample padding bits
    Mp4AtomType_paen = 'paen', //(ISO) Partition Entry
    Mp4AtomType_pclr = 'pclr', //(JP2) palette which maps a single component in index space to a multiple- component image
    Mp4AtomType_pdin = 'pdin', //(ISO) Progressive download information
    Mp4AtomType_pitm = 'pitm', //(ISO) primary item reference
    //Mp4AtomType_pnot = 'pnot', //(ISO) Reserved
    Mp4AtomType_prft = 'prft', //(ISO) Producer reference time
    Mp4AtomType_pssh = 'pssh', //(ISO-CENC) Protection system specific header
    Mp4AtomType_res_ = 'res ', //(JP2) grid resolution
    Mp4AtomType_resc = 'resc', //(JP2) grid resolution at which the image was captured
    Mp4AtomType_resd = 'resd', //(JP2) default grid resolution at which the image should be displayed
    Mp4AtomType_rinf = 'rinf', //(ISO) restricted scheme information box
    Mp4AtomType_saio = 'saio', //(ISO) Sample auxiliary information offsets
    Mp4AtomType_saiz = 'saiz', //(ISO) Sample auxiliary information sizes
    Mp4AtomType_sbgp = 'sbgp', //(NALu Video, ISO) Sample to Group box
    Mp4AtomType_schi = 'schi', //(ISO) scheme information box
    Mp4AtomType_schm = 'schm', //(ISO) scheme type box
    Mp4AtomType_sdep = 'sdep', //(NALu Video) Sample dependency
    Mp4AtomType_sdhd = 'sdhd', //(MP4V1) reserved for SceneDescriptionStream header
    Mp4AtomType_sdtp = 'sdtp', //(NALu Video, ISO) Independent and Disposable Samples Box
    Mp4AtomType_sdvp = 'sdvp', //(SDV) SD Profile Box
    Mp4AtomType_segr = 'segr', //(ISO) file delivery session group
    Mp4AtomType_senc = 'senc', //(ISO-CENC) Sample specific encryption data
    Mp4AtomType_sgpd = 'sgpd', //(NALu Video, ISO) Sample group definition box
    Mp4AtomType_sidx = 'sidx', //(3GPP) Segment Index Box
    Mp4AtomType_sinf = 'sinf', //(ISO) protection scheme information box
    Mp4AtomType_skip = 'skip', //(ISO) free space
    Mp4AtomType_smhd = 'smhd', //(ISO) sound media header, overall information (sound track only)
    Mp4AtomType_srmb = 'srmb', //(DVB) System Renewability Message
    Mp4AtomType_srmc = 'srmc', //(DVB) System Renewability Message container
    Mp4AtomType_srpp = 'srpp', //(ISO) STRP Process
    Mp4AtomType_ssix = 'ssix', //(ISO) Sub-sample index
    Mp4AtomType_stbl = 'stbl', //(ISO) sample table box, container for the time/space map
    Mp4AtomType_stco = 'stco', //(ISO) chunk offset, partial data-offset information
    Mp4AtomType_stdp = 'stdp', //(ISO) sample degradation priority
    Mp4AtomType_sthd = 'sthd', //(ISO) Subtitle Media Header Box
    Mp4AtomType_strd = 'strd', //(ISO) Sub-track definition
    Mp4AtomType_stri = 'stri', //(ISO) Sub-track information
    Mp4AtomType_stsc = 'stsc', //(ISO) sample-to-chunk, partial data-offset information
    Mp4AtomType_stsd = 'stsd', //(ISO) sample descriptions (codec types, initialization etc.)
    Mp4AtomType_stsg = 'stsg', //(ISO) Sub-track sample grouping
    Mp4AtomType_stsh = 'stsh', //(ISO) shadow sync sample table
    Mp4AtomType_stss = 'stss', //(ISO) sync sample table (random access points)
    Mp4AtomType_stsz = 'stsz', //(ISO) sample sizes (framing)
    Mp4AtomType_stts = 'stts', //(ISO) (decoding) time-to-sample
    Mp4AtomType_styp = 'styp', //(3GPP) Segment Type Box
    Mp4AtomType_stz2 = 'stz2', //(ISO) compact sample sizes (framing)
    Mp4AtomType_subs = 'subs', //(ISO) Sub-sample information
    Mp4AtomType_swtc = 'swtc', //(NALu Video) Multiview Group Relation
    Mp4AtomType_tfad = 'tfad', //(3GPP) Track fragment adjustment box
    Mp4AtomType_tfdt = 'tfdt', //(ISO) Track fragment decode time
    Mp4AtomType_tfhd = 'tfhd', //(ISO) Track fragment header
    Mp4AtomType_tfma = 'tfma', //(3GPP) Track fragment media adjustment box
    Mp4AtomType_tfra = 'tfra', //(ISO) Track fragment radom access
    Mp4AtomType_tibr = 'tibr', //(NALu Video) Tier Bit rate
    Mp4AtomType_tiri = 'tiri', //(NALu Video) Tier Information
    Mp4AtomType_tkhd = 'tkhd', //(ISO) Track header, overall information about the track
    Mp4AtomType_traf = 'traf', //(ISO) Track fragment
    Mp4AtomType_trak = 'trak', //(ISO) container for an individual track or stream
    Mp4AtomType_tref = 'tref', //(ISO) track reference container
    Mp4AtomType_trex = 'trex', //(ISO) track extends defaults
    Mp4AtomType_trgr = 'trgr', //(ISO) Track grouping information
    Mp4AtomType_trik = 'trik', //(DECE) Facilitates random access and trick play modes
    Mp4AtomType_trun = 'trun', //(ISO) track fragment run
    Mp4AtomType_udta = 'udta', //(ISO) user-data
    Mp4AtomType_uinf = 'uinf', //(JP2) a tool by which a vendor may provide access to additional information associated with a UUID
    Mp4AtomType_UITS = 'UITS', //(Universal Music) Unique Identifier Technology Solution
    Mp4AtomType_ulst = 'ulst', //(JP2) a list of UUID’s
    Mp4AtomType_url_ = 'url ', //(JP2) a URL
    Mp4AtomType_uuid = 'uuid', //(ISO, JP2) user-extension box
    Mp4AtomType_vmhd = 'vmhd', //(ISO) video media header, overall information (video track only)
    Mp4AtomType_vwdi = 'vwdi', //(NALu Video) Multiview Scene Information
    Mp4AtomType_xml_ = 'xml ', //(ISO) XML container
    //Mp4AtomType_xml  = 'xml ', //(JP2) a tool by which vendors can add XML formatted information
    ////////////////////////////////////////////////////////////////
    
    ///User-data Codes
    Mp4AtomType_albm = 'albm', //(3GPP) Album title and track number for media
    Mp4AtomType_alou = 'alou', //(ISO) Album loudness base
    Mp4AtomType_angl = 'angl', //(Apple) Name of the camera angle through which the clip was shot
    Mp4AtomType_auth = 'auth', //(3GPP) Author of the media
    Mp4AtomType_clfn = 'clfn', //(Apple) Name of the clip file
    Mp4AtomType_clid = 'clid', //(Apple) Identifier of the clip
    Mp4AtomType_clsf = 'clsf', //(3GPP) Classification of the media
    Mp4AtomType_cmid = 'cmid', //(Apple) Identifier of the camera
    Mp4AtomType_cmnm = 'cmnm', //(Apple) Name that identifies the camera
    Mp4AtomType_coll = 'coll', //(3GPP) Name of the collection from which the media comes
    Mp4AtomType_cprt = 'cprt', //(ISO) copyright etc.
    Mp4AtomType_date = 'date', //(Apple) Date and time, formatted according to ISO 8601, when the content was created. For clips captured by recording devices, this is typically the date and time when the clip’s recording started.
    Mp4AtomType_dscp = 'dscp', //(3GPP) Media description
    Mp4AtomType_gnre = 'gnre', //(3GPP) Media genre
    Mp4AtomType_hinf = 'hinf', //(ISO) hint information
    Mp4AtomType_hnti = 'hnti', //(ISO) Hint information
    //Mp4AtomType_hpix = 'hpix', //(HIPIX) Hipix Rich Picture (user-data or meta-data)
    Mp4AtomType_kywd = 'kywd', //(3GPP) Media keywords
    Mp4AtomType_loci = 'loci', //(3GPP) Media location information
    Mp4AtomType_ludt = 'ludt', //(ISO) Track loudness container
    Mp4AtomType_manu = 'manu', //(Apple) Manufacturer name of the camera
    Mp4AtomType_modl = 'modl', //(Apple) Model name of the camera
    Mp4AtomType_perf = 'perf', //(3GPP) Media performer name
    Mp4AtomType_reel = 'reel', //(Apple) Name of the tape reel
    Mp4AtomType_rtng = 'rtng', //(3GPP) Media rating
    Mp4AtomType_scen = 'scen', //(Apple) Name of the scene for which the clip was shot
    Mp4AtomType_shot = 'shot', //(Apple) Name that identifies the shot
    Mp4AtomType_slno = 'slno', //(Apple) Serial number of the camera
    Mp4AtomType_strk = 'strk', //(ISO) Sub track information
    Mp4AtomType_thmb = 'thmb', //(3GPP) Thumbnail image of the media
    Mp4AtomType_titl = 'titl', //(3GPP) Media title
    Mp4AtomType_tlou = 'tlou', //(ISO) Track loudness base
    Mp4AtomType_tsel = 'tsel', //(ISO) Track selection
    //Mp4AtomType_tsel = 'tsel', //(3GPP) Track selection
    Mp4AtomType_urat = 'urat', //(3GPP) User 'star' rating of the media
    Mp4AtomType_yrrc = 'yrrc', //(3GPP) Year when media was recorded
    ////////////////////////////////////////////////////////////////////////////
    
    
    ///QuickTime Codes
    //Mp4AtomType_albm = 'albm', //(3GPP) Album title and track number (user-data)
    //Mp4AtomType_auth = 'auth', //(3GPP) Media author name (user-data)
    Mp4AtomType_clip = 'clip', //(QT) Visual clipping region container
    //Mp4AtomType_clsf = 'clsf', //(3GPP) Media classification (user-data)
    //Mp4AtomType_cprt = 'cprt', //(ISO) copyright etc. (user-data)
    Mp4AtomType_crgn = 'crgn', //(QT) Visual clipping region definition
    Mp4AtomType_ctab = 'ctab', //(QT) Track color-table
    Mp4AtomType_dcfD = 'dcfD', //(OMArlin) Marlin DCF Duration, user-data atom type
    Mp4AtomType_elng = 'elng', //(QT) Extended Language Tag
    Mp4AtomType_imap = 'imap', //(QT) Track input map definition
    Mp4AtomType_kmat = 'kmat', //(QT) Compressed visual track matte
    Mp4AtomType_load = 'load', //(QT) Track pre-load definitions
    Mp4AtomType_matt = 'matt', //(QT) Visual track matte for compositing
    Mp4AtomType_pnot = 'pnot', //(QT) Preview container
};
